class Rook:

    # Square Bonus Maps 
    # (White, Opening & Endgame):
    #  0,  0,  0,  0,  0,  0,  0,  0,
    #  5, 10, 10, 10, 10, 10, 10,  5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    #  0,  0,  0,  5,  5,  0,  0,  0,

    # (Black, Opening & Endgame):
    # 0,  0,  0,  5,  5,  0,  0,  0,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # -5,  0,  0,  0,  0,  0,  0, -5,
    # 5, 10, 10, 10, 10, 10, 10,  5,
    # 0,  0,  0,  0,  0,  0,  0,  0,


    square_bonuses = [None, [[0, 0, 0, 5, 5, 0, 0, 0, 
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              5, 10, 10, 10, 10, 10, 10, 5,
                              0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 5, 5, 0, 0, 0, 
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              5, 10, 10, 10, 10, 10, 10, 5,
                              0, 0, 0, 0, 0, 0, 0, 0]],
                            [[0, 0, 0, 0, 0, 0, 0, 0,
                              5, 10, 10, 10, 10, 10, 10, 5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              0, 0, 0, 5, 5, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0,
                              5, 10, 10, 10, 10, 10, 10, 5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              -5, 0, 0, 0, 0, 0, 0, -5,
                              0, 0, 0, 5, 5, 0, 0, 0]]]




    def __init__(self, color):
        self.color = color # 1 = white, -1 = black
        self.id = "rook"
        self.base_value = 500

    def __str__(self):
        return "R" if self.color == 1 else "r"

    def get_bonus(self, i, endgame):
        if endgame:
            return Rook.square_bonuses[self.color][1][i]
        else:
            return Rook.square_bonuses[self.color][0][i]