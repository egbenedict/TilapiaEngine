class Knight:

    # Square Bonus Maps 
    # (White, Opening & Endgame):
    # -50,-40,-30,-30,-30,-30,-40,-50,
    # -40,-20,  0,  0,  0,  0,-20,-40,
    # -30,  0,  5,  5,  5,  5,  0,-30,
    # -30,  5, 15, 20, 20, 15,  5,-30,
    # -30,  0, 15, 20, 20, 15,  0,-30,
    # -30,  5, 15, 15, 15, 15,  5,-30,
    # -40,-20,  0, 10, 10,  0,-20,-40,
    # -50,-30,-30,-30,-30,-30,-30,-50,

    # (Black, Opening & Endgame):
    # -50,-30,-30,-30,-30,-30,-30,-50,
    # -40,-20,  0, 10, 10,  0,-20,-40,
    # -30,  5, 15, 15, 15, 15,  5,-30,
    # -30,  0, 15, 20, 20, 15,  0,-30,
    # -30,  5, 15, 20, 20, 15,  5,-30,
    # -30,  0,  5,  5,  5,  5,  0,-30,
    # -40,-20,  0,  0,  0,  0,-20,-40,
    # -50,-40,-30,-30,-30,-30,-40,-50,


    square_bonuses = [None, [[-50, -30, -30, -30, -30, -30, -30, -50, 
                              -40, -20, 0, 10, 10, 0, -20, -40,
                              -30,  5, 15, 15, 15, 15,  5, -30,
                              -30,  0, 15, 20, 20, 15,  0, -30,
                              -30,  5, 15, 20, 20, 15,  5, -30,
                              -30,  0,  5,  5,  5,  5,  0, -30,
                              -40, -20,  0,  0,  0,  0, -20, -40,
                              -50, -40, -30, -30, -30, -30, -40, -50],
                             [-50, -40, -30, -30, -30, -30, -40, -50, 
                              -40, -20, 0, 10, 10, 0, -20, -40,
                              -30,  5, 15, 15, 15, 15,  5, -30,
                              -30,  0, 15, 20, 20, 15,  0, -30,
                              -30,  5, 15, 20, 20, 15,  5, -30,
                              -30,  0,  5,  5,  5,  5,  0, -30,
                              -40, -20,  0,  0,  0,  0, -20, -40,
                              -50, -40, -30, -30, -30, -30, -40, -50]],
                            [[-50, -40, -30, -30, -30, -30, -40, -50,
                              -40, -20,  0,  0,  0,  0, -20, -40,
                              -30,  0,  5,  5,  5,  5,  0, -30,
                              -30,  5, 15, 20, 20, 15,  5, -30,
                              -30,  0, 15, 20, 20, 15,  0, -30,
                              -30,  5, 15, 15, 15, 15,  5, -30,
                              -40, -20, 0, 10, 10, 0, -20, -40,
                              -50, -30, -30, -30, -30, -30, -30, -50],
                             [-50, -40, -30, -30, -30, -30, -40, -50,
                              -40, -20,  0,  0,  0,  0, -20, -40,
                              -30,  0,  5,  5,  5,  5,  0, -30,
                              -30,  5, 15, 20, 20, 15,  5, -30,
                              -30,  0, 15, 20, 20, 15,  0, -30,
                              -30,  5, 15, 15, 15, 15,  5, -30,
                              -40, -20, 0, 10, 10, 0, -20, -40,
                              -50, -40, -30, -30, -30, -30, -40, -50]]]

    def __init__(self, color):
        self.color = color # 1 = white, -1 = black
        self.id = "knight"
        self.base_value = 320

    def __str__(self):
        return "♘" if self.color == 1 else "♞"

    def get_bonus(self, i, endgame):
        if endgame:
            return Knight.square_bonuses[self.color][1][i]
        else:
            return Knight.square_bonuses[self.color][0][i]