class Bishop:

    # Square Bonus Maps 
    # (White, Opening):
    # -20,-10,-10,-10,-10,-10, -10,-20,
    # -10,  0,  0,  0,  0,  0,   0,-10,
    # -10,  0,  0,  0,  0,  5,   0,-10,
    # -10, 15,  5,  5,  5,  5,  15,-10,
    #  -5,  0, 15, 15, 15, 15,   0, -5,
    # -10, 10, 10, 10, 10, 10,  10,-10,
    # -10, 10,  0,  0,  0,  0,  10,-10,
    # -10,-10,-15,-10,-10,-15, -10,-10,
    # 
    # (White, Endgame):
    # -10,-10,-10,-10,-10,-10,-10, -10,
    # -10,  7,  0,  0,  0,  0,  7, -10,
    # -10,  0,  5,  5,  5,  5,  0, -10,
    # -10, 10, 15, 15, 15, 15, 10, -10,
    # -10, 10, 15, 15, 15, 15, 10, -10,
    # -10,  0,  5,  5,  5,  5,  0, -10,
    # -10,  7,  0,  0,  0,  0,  7, -10,
    # -10,-10,-10,-10,-10,-10, -10,-10,  

    # (Black, Opening):
    # -10,-10,-15,-10,-10,-15, -10,-10,
    # -10, 10,  0,  0,  0,  0,  10,-10,
    # -10, 10, 10, 10, 10, 10,  10,-10,
    # -5,  0, 15, 15, 15, 15,   0, -5,
    # -10, 15,  5,  5,  5,  5,  15,-10,
    # -10,  0,  0,  0,  0,  5,   0,-10,
    # -10,  0,  0,  0,  0,  0,   0,-10,
    # -20,-10,-10,-10,-10,-10, -10,-20,
    # 
    # (Black, Endgame):
    # -10,-10,-10,-10,-10,-10, -10,-10,  
    # -10,  7,  0,  0,  0,  0,  7, -10,
    # -10,  0,  5,  5,  5,  5,  0, -10,
    # -10, 10, 15, 15, 15, 15, 10, -10,
    # -10, 10, 15, 15, 15, 15, 10, -10,
    # -10,  0,  5,  5,  5,  5,  0, -10,
    # -10,  7,  0,  0,  0,  0,  7, -10,
    # -10,-10,-10,-10,-10,-10, -10,-10,  

    
    square_bonuses = [None, [[-10, -10, -15, -10, -10, -15, -10, -10, 
                              -10, 10,  0,  0,  0,  0,  10, -10,
                              -10, 10, 10, 10, 10, 10,  10, -10,
                              -5, 0, 15, 15, 15, 15, 0, -5,
                              -10, 15,  5,  5,  5,  5,  15, -10,
                              -10,  0,  0,  0,  0,  5,   0, -10,
                              -10,  0,  0,  0,  0,  0,   0, -10,
                              -20,-10,-10,-10,-10,-10, -10,-20],
                             [-10, -10, -10, -10, -10, -10, -10, -10,   
                              -10, 7, 0, 0, 0, 0, 7, -10,
                              -10, 0, 5, 5, 5, 5, 0, -10,
                              -10, 10, 15, 15, 15, 15, 10, -10,
                              -10, 10, 15, 15, 15, 15, 10, -10,
                              -10, 0, 5, 5, 5, 5, 0, -10,
                              -10, 7,  0, 0, 0, 0, 7, -10,
                              -10, -10, -10, -10, -10, -10, -10, -10]],
                            [[-20,-10,-10,-10,-10,-10, -10,-20,
                              -10,  0,  0,  0,  0,  0,   0, -10,
                              -10,  0,  0,  0,  0,  5,   0, -10,
                              -10, 15,  5,  5,  5,  5,  15, -10,
                              -5, 0, 15, 15, 15, 15, 0, -5,
                              -10, 10, 10, 10, 10, 10,  10, -10,
                              -10, 10,  0,  0,  0,  0,  10, -10,
                              -10, -10, -15, -10, -10, -15, -10, -10],
                             [-10, -10, -10, -10, -10, -10, -10, -10,   
                              -10, 7, 0, 0, 0, 0, 7, -10,
                              -10, 0, 5, 5, 5, 5, 0, -10,
                              -10, 10, 15, 15, 15, 15, 10, -10,
                              -10, 10, 15, 15, 15, 15, 10, -10,
                              -10, 0, 5, 5, 5, 5, 0, -10,
                              -10, 7,  0, 0, 0, 0, 7, -10,
                              -10, -10, -10, -10, -10, -10, -10, -10]]]


    def __init__(self, color):
        self.color = color # 1 = white, -1 = black
        self.id = "bishop"
        self.base_value = 330

    def __str__(self):
        return "♗" if self.color == 1 else "♝"

    def get_bonus(self, i, endgame):
        if endgame:
            return Bishop.square_bonuses[self.color][1][i]
        else:
            return Bishop.square_bonuses[self.color][0][i]